{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\web-sayfam\\\\src\\\\pages\\\\navBarPages\\\\DarkLightMode.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport { DarkLightMod } from \"../../contexts/DarkLightContext\";\nimport \"./CSS/DarkLightMode.css\";\nimport { LanguageVerisi } from \"../../contexts/LanguageContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DarkLightMode = () => {\n  _s();\n  const {\n    theme,\n    setTheme\n  } = useContext(DarkLightMod);\n  const {\n    language,\n    setLanguage\n  } = useContext(LanguageVerisi);\n  const [darkMode, setDarkMode] = useState(); //[\"Karanlık Mod\",\"Dark Mod\"]\n  const [lightMode, setLightMode] = useState(); //[\"Aydınlık Mod\",\"Light Mod\"]\n  useEffect(() => {\n    if (language === \"tr-TR\") {\n      setDarkMode(\"Karanlık Mod\");\n      setLightMode(\"Aydınlık Mod\");\n    } else if (language === \"en-US\") {\n      setDarkMode(\"Dark Mod\");\n      setLightMode(\"Light Mod\");\n    }\n  }, [language]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"DarkLight\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"theme-toggle\",\n      className: \"switch\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"theme-toggle\",\n        type: \"checkbox\",\n        onChange: () => setTheme(!theme),\n        checked: theme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"slider round\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: theme === false ? \"slider2 round2\" : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: theme === true ? \"\" : \"#777777\"\n      },\n      children: theme === false ? lightMode : darkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(DarkLightMode, \"7VWMXpOsXhw0VZalAyBN0/6dd+k=\");\n_c = DarkLightMode;\nexport default DarkLightMode;\nvar _c;\n$RefreshReg$(_c, \"DarkLightMode\");","map":{"version":3,"names":["useContext","useEffect","useState","DarkLightMod","LanguageVerisi","jsxDEV","_jsxDEV","DarkLightMode","_s","theme","setTheme","language","setLanguage","darkMode","setDarkMode","lightMode","setLightMode","id","children","htmlFor","className","type","onChange","checked","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/web-sayfam/src/pages/navBarPages/DarkLightMode.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport { DarkLightMod } from \"../../contexts/DarkLightContext\";\r\nimport \"./CSS/DarkLightMode.css\";\r\nimport { LanguageVerisi } from \"../../contexts/LanguageContext\";\r\n\r\nconst DarkLightMode = () => {\r\n  const { theme, setTheme } = useContext(DarkLightMod);\r\n  const { language, setLanguage } = useContext(LanguageVerisi);\r\n\r\n  const [darkMode, setDarkMode] = useState(); //[\"Karanlık Mod\",\"Dark Mod\"]\r\n  const [lightMode, setLightMode] = useState(); //[\"Aydınlık Mod\",\"Light Mod\"]\r\n  useEffect(() => {\r\n    if (language === \"tr-TR\") {\r\n      setDarkMode(\"Karanlık Mod\");\r\n      setLightMode(\"Aydınlık Mod\");\r\n    } else if (language === \"en-US\") {\r\n      setDarkMode(\"Dark Mod\");\r\n      setLightMode(\"Light Mod\");\r\n    }\r\n  }, [language]);\r\n\r\n  return (\r\n    <div id=\"DarkLight\">\r\n      <label htmlFor=\"theme-toggle\" className=\"switch\">\r\n        <input\r\n          id=\"theme-toggle\"\r\n          type=\"checkbox\"\r\n          onChange={() => setTheme(!theme)}\r\n          checked={theme}\r\n        />\r\n        <span className=\"slider round\"></span>\r\n        <span className={theme === false ? \"slider2 round2\" : \"\"}></span>\r\n      </label>\r\n      <p style={{color: (theme===true ? \"\" : \"#777777\") }}>{theme === false ? lightMode : darkMode}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DarkLightMode;\r\n"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACvD,SAASC,YAAY,QAAQ,iCAAiC;AAC9D,OAAO,yBAAyB;AAChC,SAASC,cAAc,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGV,UAAU,CAACG,YAAY,CAAC;EACpD,MAAM;IAAEQ,QAAQ;IAAEC;EAAY,CAAC,GAAGZ,UAAU,CAACI,cAAc,CAAC;EAE5D,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9CD,SAAS,CAAC,MAAM;IACd,IAAIU,QAAQ,KAAK,OAAO,EAAE;MACxBG,WAAW,CAAC,cAAc,CAAC;MAC3BE,YAAY,CAAC,cAAc,CAAC;IAC9B,CAAC,MAAM,IAAIL,QAAQ,KAAK,OAAO,EAAE;MAC/BG,WAAW,CAAC,UAAU,CAAC;MACvBE,YAAY,CAAC,WAAW,CAAC;IAC3B;EACF,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEd,oBACEL,OAAA;IAAKW,EAAE,EAAC,WAAW;IAAAC,QAAA,gBACjBZ,OAAA;MAAOa,OAAO,EAAC,cAAc;MAACC,SAAS,EAAC,QAAQ;MAAAF,QAAA,gBAC9CZ,OAAA;QACEW,EAAE,EAAC,cAAc;QACjBI,IAAI,EAAC,UAAU;QACfC,QAAQ,EAAEA,CAAA,KAAMZ,QAAQ,CAAC,CAACD,KAAK,CAAE;QACjCc,OAAO,EAAEd;MAAM;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC,eACFrB,OAAA;QAAMc,SAAS,EAAC;MAAc;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtCrB,OAAA;QAAMc,SAAS,EAAEX,KAAK,KAAK,KAAK,GAAG,gBAAgB,GAAG;MAAG;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC,eACRrB,OAAA;MAAGsB,KAAK,EAAE;QAACC,KAAK,EAAGpB,KAAK,KAAG,IAAI,GAAG,EAAE,GAAG;MAAW,CAAE;MAAAS,QAAA,EAAET,KAAK,KAAK,KAAK,GAAGM,SAAS,GAAGF;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9F,CAAC;AAEV,CAAC;AAACnB,EAAA,CA/BID,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AAiCnB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}