{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\web-sayfam\\\\src\\\\pages\\\\navBar_Pages\\\\DarkLightMode.js\",\n  _s = $RefreshSig$();\nimport \"./CSS/DarkLightMode.css\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { DarkLightMod } from \"../../contexts/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DarkLightMode = () => {\n  _s();\n  const {\n    theme,\n    setTheme\n  } = useContext(DarkLightMod);\n  console.log(theme);\n  const [language, setLanguage] = useState(\"TR\"); //[\"TR\",\"ENG\"\n\n  const [DarkMod, setDarkMod] = useState(); //[\"Karanlık Mod\",\"Dark Mod\"\n  const [LightMod, setLightMod] = useState(); //[\"Aydınlık Mod\",\"Light Mod\"\n  useEffect(() => {\n    if (language === \"TR\") {\n      setDarkMode(\"Karanlık Mod\");\n      setLightMode(\"Aydınlık Mod\");\n    } else if (language === \"ENG\") {\n      setDarkMode(\"Dark Mod\");\n      setLightMode(\"Light Mod\");\n    }\n  }, [language]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"theme-toggle\",\n      className: \"switch\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"theme-toggle\",\n        type: \"checkbox\",\n        onChange: () => setTheme(!theme),\n        checked: theme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"slider round\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: theme === false ? \"slider2 round2\" : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: theme === false ? DarkMod : LightMod\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(DarkLightMode, \"m8zCKuIolSFKL2F6DMoGkZiLw1w=\");\n_c = DarkLightMode;\nexport default DarkLightMode;\nvar _c;\n$RefreshReg$(_c, \"DarkLightMode\");","map":{"version":3,"names":["useContext","useEffect","useState","DarkLightMod","jsxDEV","_jsxDEV","DarkLightMode","_s","theme","setTheme","console","log","language","setLanguage","DarkMod","setDarkMod","LightMod","setLightMod","setDarkMode","setLightMode","children","htmlFor","className","id","type","onChange","checked","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/web-sayfam/src/pages/navBar_Pages/DarkLightMode.js"],"sourcesContent":["import \"./CSS/DarkLightMode.css\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { DarkLightMod } from \"../../contexts/Context\";\r\n\r\nconst DarkLightMode = () => {\r\n  const { theme, setTheme } = useContext(DarkLightMod);\r\n  console.log(theme);\r\n\r\n  const [language , setLanguage] = useState(\"TR\") //[\"TR\",\"ENG\"\r\n\r\nconst [DarkMod , setDarkMod] = useState() //[\"Karanlık Mod\",\"Dark Mod\"\r\nconst [LightMod , setLightMod] = useState() //[\"Aydınlık Mod\",\"Light Mod\"\r\nuseEffect(() => {\r\n  if (language === \"TR\") {\r\n    setDarkMode(\"Karanlık Mod\");\r\n    setLightMode(\"Aydınlık Mod\");\r\n  } else if (language === \"ENG\") {\r\n    setDarkMode(\"Dark Mod\");\r\n    setLightMode(\"Light Mod\");\r\n  }\r\n}, [language]);\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"theme-toggle\" className=\"switch\">\r\n        <input\r\n          id=\"theme-toggle\"\r\n          type=\"checkbox\"\r\n          onChange={() => setTheme(!theme)}\r\n          checked={theme}\r\n        />\r\n        <span className=\"slider round\"></span>\r\n        <span className={theme === false ? \"slider2 round2\": \"\"}></span>\r\n      </label>\r\n      <p>{theme=== false ? DarkMod: LightMod}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DarkLightMode;\r\n"],"mappings":";;AAAA,OAAO,yBAAyB;AAChC,SAASA,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACvD,SAASC,YAAY,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGT,UAAU,CAACG,YAAY,CAAC;EACpDO,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;EAElB,MAAM,CAACI,QAAQ,EAAGC,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,EAAC;;EAElD,MAAM,CAACY,OAAO,EAAGC,UAAU,CAAC,GAAGb,QAAQ,CAAC,CAAC,EAAC;EAC1C,MAAM,CAACc,QAAQ,EAAGC,WAAW,CAAC,GAAGf,QAAQ,CAAC,CAAC,EAAC;EAC5CD,SAAS,CAAC,MAAM;IACd,IAAIW,QAAQ,KAAK,IAAI,EAAE;MACrBM,WAAW,CAAC,cAAc,CAAC;MAC3BC,YAAY,CAAC,cAAc,CAAC;IAC9B,CAAC,MAAM,IAAIP,QAAQ,KAAK,KAAK,EAAE;MAC7BM,WAAW,CAAC,UAAU,CAAC;MACvBC,YAAY,CAAC,WAAW,CAAC;IAC3B;EACF,CAAC,EAAE,CAACP,QAAQ,CAAC,CAAC;EAIZ,oBACEP,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAOgB,OAAO,EAAC,cAAc;MAACC,SAAS,EAAC,QAAQ;MAAAF,QAAA,gBAC9Cf,OAAA;QACEkB,EAAE,EAAC,cAAc;QACjBC,IAAI,EAAC,UAAU;QACfC,QAAQ,EAAEA,CAAA,KAAMhB,QAAQ,CAAC,CAACD,KAAK,CAAE;QACjCkB,OAAO,EAAElB;MAAM;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC,eACFzB,OAAA;QAAMiB,SAAS,EAAC;MAAc;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtCzB,OAAA;QAAMiB,SAAS,EAAEd,KAAK,KAAK,KAAK,GAAG,gBAAgB,GAAE;MAAG;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC,eACRzB,OAAA;MAAAe,QAAA,EAAIZ,KAAK,KAAI,KAAK,GAAGM,OAAO,GAAEE;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV,CAAC;AAACvB,EAAA,CAnCID,aAAa;AAAAyB,EAAA,GAAbzB,aAAa;AAqCnB,eAAeA,aAAa;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}