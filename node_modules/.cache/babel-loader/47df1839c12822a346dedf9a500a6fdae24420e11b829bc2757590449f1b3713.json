{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\web-sayfam\\\\src\\\\pages\\\\navBar_Pages\\\\DarkLightMode.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './CSS/DarkLightMode.css';\nimport { useContext } from 'react';\nimport { DarkLightMod } from '../../contexts/Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DarkLightMode = () => {\n  _s();\n  const {\n    theme,\n    setTheme\n  } = useContext(DarkLightMod);\n  const toggleTheme = () => {\n    setTheme(theme === 'dark' ? 'light' : 'dark');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"theme-toggle\",\n      className: \"switch\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"theme-toggle\",\n        type: \"checkbox\",\n        checked: theme === 'dark',\n        onChange: toggleTheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"slider round\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(DarkLightMode, \"1tLm1047y+KQvBdT7GSlDcMgI2Y=\");\n_c = DarkLightMode;\nexport default DarkLightMode;\nvar _c;\n$RefreshReg$(_c, \"DarkLightMode\");","map":{"version":3,"names":["React","useState","useContext","DarkLightMod","jsxDEV","_jsxDEV","DarkLightMode","_s","theme","setTheme","toggleTheme","children","htmlFor","className","id","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/web-sayfam/src/pages/navBar_Pages/DarkLightMode.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './CSS/DarkLightMode.css';\r\nimport { useContext } from 'react';\r\nimport {DarkLightMod} from '../../contexts/Context';\r\n\r\nconst DarkLightMode = () => {\r\n  const { theme ,setTheme} = useContext(DarkLightMod);\r\n  \r\n  const toggleTheme = () => {\r\n    setTheme(theme === 'dark' ? 'light' : 'dark');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"theme-toggle\" className=\"switch\">\r\n        <input\r\n          id=\"theme-toggle\"\r\n          type=\"checkbox\"\r\n          checked={theme === 'dark'}\r\n          onChange={toggleTheme}\r\n        />\r\n        <span className=\"slider round\"></span>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DarkLightMode;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,yBAAyB;AAChC,SAASC,UAAU,QAAQ,OAAO;AAClC,SAAQC,YAAY,QAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGP,UAAU,CAACC,YAAY,CAAC;EAEnD,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACxBD,QAAQ,CAACD,KAAK,KAAK,MAAM,GAAG,OAAO,GAAG,MAAM,CAAC;EAC/C,CAAC;EAED,oBACEH,OAAA;IAAAM,QAAA,eACEN,OAAA;MAAOO,OAAO,EAAC,cAAc;MAACC,SAAS,EAAC,QAAQ;MAAAF,QAAA,gBAC9CN,OAAA;QACES,EAAE,EAAC,cAAc;QACjBC,IAAI,EAAC,UAAU;QACfC,OAAO,EAAER,KAAK,KAAK,MAAO;QAC1BS,QAAQ,EAAEP;MAAY;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,eACFhB,OAAA;QAAMQ,SAAS,EAAC;MAAc;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACd,EAAA,CApBID,aAAa;AAAAgB,EAAA,GAAbhB,aAAa;AAsBnB,eAAeA,aAAa;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}